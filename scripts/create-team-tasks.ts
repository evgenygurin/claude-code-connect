/**
 * Create Linear tasks for team to fix remaining test issues
 */

import { LinearClient } from "@linear/sdk";
import * as dotenv from "dotenv";

// Load environment variables
dotenv.config();

interface TaskData {
  title: string;
  description: string;
  priority: number;
  labels: string[];
  estimate: number;
  assigneeEmail?: string;
}

const tasks: TaskData[] = [
  {
    title: "üîß Fix Agent Scenarios Integration Tests (High Priority)",
    description: `**–ó–∞–¥–∞—á–∞**: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –≤ src/testing/agent-scenarios.test.ts

**–ü—Ä–æ–±–ª–µ–º—ã**:
- –í—Å–µ —Ç–µ—Å—Ç—ã –ø–∞–¥–∞—é—Ç –∏–∑-–∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∫–æ–≤
- –ü—Ä–æ–±–ª–µ–º—ã —Å SessionManager integration
- –ù—É–∂–Ω–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –∫ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ test-utils

**–§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è**:
- \`src/testing/agent-scenarios.test.ts\`
- \`src/testing/workflow.test.ts\`

**–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π**:
1. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —Ç–µ—Å—Ç–æ–≤
2. –û–±–Ω–æ–≤–∏—Ç—å –º–æ–∫–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å test-utils.ts
3. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
4. –£–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç

**–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏**:
- –í—Å–µ —Ç–µ—Å—Ç—ã –≤ agent-scenarios.test.ts –ø—Ä–æ—Ö–æ–¥—è—Ç
- –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞ –Ω–µ —Å–Ω–∏–∂–∞–µ—Ç—Å—è
- –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç**: HIGH - –±–ª–æ–∫–∏—Ä—É–µ—Ç CI/CD`,
    priority: 2,
    labels: ["testing", "integration", "high-priority", "bug"],
    estimate: 8,
    assigneeEmail: "developer1@team.local"
  },
  
  {
    title: "üß™ Fix Integration Test Framework Issues",
    description: `**–ó–∞–¥–∞—á–∞**: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ —Ç–µ—Å—Ç–∞–º–∏

**–ü—Ä–æ–±–ª–µ–º—ã**:
- src/testing/integration.test.ts –ø–∞–¥–∞–µ—Ç
- Vitest internal state access errors
- Transform errors –≤ webhook handler tests

**–§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è**:
- \`src/testing/integration.test.ts\`
- \`src/testing/run-integration-tests.ts\`

**–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π**:
1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å Vitest configuration issues
2. –†–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å internal state access
3. –û–±–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø–æ–¥ –Ω–æ–≤—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
4. –£–±–µ–¥–∏—Ç—å—Å—è –≤ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ CI

**–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏**:
- integration.test.ts –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Ö–æ–¥–∏—Ç
- –ù–µ—Ç –æ—à–∏–±–æ–∫ transform/configuration
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å—Ç–∞–±–∏–ª—å–Ω—ã

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç**: HIGH - –∫—Ä–∏—Ç–∏—á–Ω–æ –¥–ª—è CI`,
    priority: 2,
    labels: ["testing", "vitest", "integration", "framework"],
    estimate: 6,
    assigneeEmail: "developer2@team.local"
  },

  {
    title: "‚öôÔ∏è Fix Remaining Unit Test Issues",
    description: `**–ó–∞–¥–∞—á–∞**: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –ø—Ä–æ–±–ª–µ–º—ã unit —Ç–µ—Å—Ç–æ–≤

**–ü—Ä–æ–±–ª–µ–º—ã**:
- Branch name generation —Ç–µ—Å—Ç—ã –ø–∞–¥–∞—é—Ç –≤ SessionManager
- –ù–µ—Å–∫–æ–ª—å–∫–æ webhook handler —Ç–µ—Å—Ç–æ–≤ —Ç—Ä–µ–±—É—é—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏
- –ü—Ä–æ–±–ª–µ–º—ã —Å mock cleanup

**–§–∞–π–ª—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è**:
- \`src/sessions/manager.test.ts\` (branch generation)
- \`src/webhooks/handler.test.ts\` (remaining failures)
- \`src/utils/*.test.ts\` (config validation)

**–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π**:
1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å branch name generation —Ç–µ—Å—Ç—ã
2. –î–æ–≤–µ—Å—Ç–∏ –¥–æ –∫–æ–Ω—Ü–∞ webhook handler —Ç–µ—Å—Ç—ã
3. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –º–æ–∫–æ–≤
4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ edge cases

**–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏**:
- –í—Å–µ unit —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç (100%)
- –ú–æ–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
- Edge cases –ø–æ–∫—Ä—ã—Ç—ã

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç**: MEDIUM - –∑–∞–≤–µ—Ä—à–∞—é—â–∏–π —ç—Ç–∞–ø`,
    priority: 3,
    labels: ["testing", "unit-tests", "mocks", "cleanup"],
    estimate: 4,
    assigneeEmail: "developer3@team.local"
  },

  {
    title: "üìä Test Coverage Analysis & Optimization",
    description: `**–ó–∞–¥–∞—á–∞**: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–æ–≤

**–¶–µ–ª–∏**:
- –î–æ—Å—Ç–∏—á—å 80%+ –ø–æ–∫—Ä—ã—Ç–∏—è –∫–æ–¥–∞ —Ç–µ—Å—Ç–∞–º–∏
- –£–±–µ–¥–∏—Ç—å—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
- –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç-—Å—å—é—Ç–∞

**–ü–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π**:
1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è: \`npm run test:coverage\`
2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –æ–±–ª–∞—Å—Ç–∏ —Å –Ω–∏–∑–∫–∏–º –ø–æ–∫—Ä—ã—Ç–∏–µ–º
3. –ù–∞–ø–∏—Å–∞—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–µ—Å—Ç—ã
4. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
5. –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏

**–§–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞**:
- –í—Å–µ —Ñ–∞–π–ª—ã –≤ \`src/\` –±–µ–∑ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
- –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—É—Ç–∏ (security, core logic)

**–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏**:
- –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ >= 80%
- –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–∫—Ä—ã—Ç—ã
- –¢–µ—Å—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è < 30 —Å–µ–∫—É–Ω–¥
- –°–æ–∑–¥–∞–Ω coverage report

**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç**: MEDIUM - –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞`,
    priority: 3,
    labels: ["testing", "coverage", "optimization", "quality"],
    estimate: 5,
    assigneeEmail: "developer4@team.local"
  }
];

async function createTeamTasks() {
  const apiKey = process.env.LINEAR_API_TOKEN;
  const orgId = process.env.LINEAR_ORGANIZATION_ID;
  
  if (!apiKey || !orgId) {
    console.error("‚ùå Missing LINEAR_API_TOKEN or LINEAR_ORGANIZATION_ID");
    process.exit(1);
  }

  const linear = new LinearClient({ apiKey });

  try {
    console.log("üîç Getting team information...");
    
    // Get team (assuming first team for now)
    const teams = await linear.teams();
    const team = teams.nodes[0];
    
    if (!team) {
      console.error("‚ùå No teams found");
      process.exit(1);
    }

    console.log(`üìã Creating tasks for team: ${team.name}`);
    console.log(`üéØ Total tasks to create: ${tasks.length}\n`);

    for (let i = 0; i < tasks.length; i++) {
      const task = tasks[i];
      
      console.log(`‚è≥ Creating task ${i + 1}/${tasks.length}: ${task.title}`);
      
      try {
        const issue = await linear.createIssue({
          teamId: team.id,
          title: task.title,
          description: task.description,
          priority: task.priority,
          estimate: task.estimate,
          // Note: Labels would need to be created first in real scenario
          // For now, just create without labels
        });

        if (issue.success) {
          console.log(`‚úÖ Created: ${issue.issue?.identifier} - ${task.title}`);
          console.log(`   üîó URL: ${issue.issue?.url}`);
          console.log(`   üë§ Assigned to: ${task.assigneeEmail || 'Unassigned'}`);
          console.log(`   üìä Estimate: ${task.estimate} points\n`);
        } else {
          console.error(`‚ùå Failed to create task: ${task.title}`);
        }
      } catch (error) {
        console.error(`‚ùå Error creating task "${task.title}":`, error);
      }
    }

    console.log("üéâ Team task creation completed!");
    console.log("\nüìã **TASK DISTRIBUTION SUMMARY**:");
    console.log("================================");
    
    tasks.forEach((task, index) => {
      console.log(`${index + 1}. ${task.title}`);
      console.log(`   üë§ Assignee: ${task.assigneeEmail || 'Unassigned'}`);
      console.log(`   üìä Estimate: ${task.estimate} points`);
      console.log(`   üéØ Priority: ${task.priority === 1 ? 'URGENT' : task.priority === 2 ? 'HIGH' : 'MEDIUM'}`);
      console.log("");
    });

    console.log("üöÄ **NEXT STEPS**:");
    console.log("- Assign tasks to team members");
    console.log("- Set up Linear notifications");
    console.log("- Create sprint/milestone for tracking");
    console.log("- Monitor progress daily");

  } catch (error) {
    console.error("‚ùå Failed to create team tasks:", error);
    process.exit(1);
  }
}

if (import.meta.url === `file://${process.argv[1]}`) {
  createTeamTasks();
}